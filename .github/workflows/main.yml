name: CI (main)
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Настройка Node
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
          cache: "yarn"

      - name: Получение пути к кэшу
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Установка зависимостей
        run: yarn --prefer-offline

  build-local:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Чтение репозитория
        uses: actions/checkout@v2

      - name: Установка ноды
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Извлечение node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Сборка сервисов
        run: yarn turbo build --filter=api --filter=bot --filter=web

      - name: Загрузка артефактов
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            apps/*/dist
            packages/*/dist

  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Авторизация в Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_TOKEN }}
      - run: docker build -f apps/api/Dockerfile --build-arg VERSION=$GITHUB_SHA -t ${{ secrets.CI_IMAGE_TAG_API }}:$GITHUB_SHA .
      - run: docker push ${{ secrets.CI_IMAGE_TAG_API }}:$GITHUB_SHA

  build-bot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Авторизация в Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_TOKEN }}
      - run: docker build -f apps/bot/Dockerfile --build-arg VERSION=$GITHUB_SHA -t ${{ secrets.CI_IMAGE_TAG_BOT }}:$GITHUB_SHA .
      - run: docker push ${{ secrets.CI_IMAGE_TAG_BOT }}:$GITHUB_SHA

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Авторизация в Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_TOKEN }}
      - run: docker build -f apps/web/Dockerfile --build-arg VERSION=$GITHUB_SHA -t ${{ secrets.CI_IMAGE_TAG_WEB }}:$GITHUB_SHA .
      - run: docker push ${{ secrets.CI_IMAGE_TAG_WEB }}:$GITHUB_SHA

  test-unit:
    runs-on: ubuntu-latest
    needs: build-local
    steps:
      - name: Чтение репозитория
        uses: actions/checkout@v2

      - name: Установка ноды
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Загрузка артефактов
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Запуск юнит-тестов
        run: yarn turbo test:ci

  test-server:
    runs-on: ubuntu-latest
    needs: build-local
    steps:
      - name: Чтение репозитория
        uses: actions/checkout@v2

      - name: Установка ноды
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Загрузка артефактов
        uses: actions/download-artifact@v4
        with:
          name: dist

      - run: echo "${{ secrets.TEST_SERVER_ENV }}" >> ./apps/api/.env && echo 'VERSION=$GITHUB_SHA' >> ./apps/api/.env
      - run: CI=true yarn turbo test:server

  test-e2e:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build-api
      - build-bot
      - build-web
    steps:
      - run: echo "${{ secrets.TEST_E2E_ENV }}" >> ./deployment/test/.env && echo 'VERSION=$GITHUB_SHA' >> ./deployment/test/.env
      - run: chmod u+x ./deployment/_scripts/db-init.sh && chmod u+x ./deployment/_scripts/redis-init.sh
      - run: docker compose -f ./deployment/test/docker-compose.yml up --attach playwright-runner --exit-code-from playwright-runner
