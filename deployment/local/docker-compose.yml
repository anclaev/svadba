services:
  api:
    image: svadba-api:local
    ports:
      - '9001:3001'
    depends_on:
      - db
      - minio
      - redis
    environment:
      APP_VERSION: ${VERSION}
      HOST: ${API_HOST}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      COOKIE_SECRET: ${API_COOKIE_SECRET}
      PORT: ${API_PORT}
      GRPC_PORT: ${API_GRPC_PORT}
      SENTRY_DSN: ${API_SENTRY_DSN}
      JWT_ACCESS_SECRET: ${API_JWT_ACCESS_SECRET}
      JWT_CONFIRMATION_SECRET: ${API_JWT_CONFIRMATION_SECRET}
      JWT_RESET_PASSWORD_SECRET: ${API_JWT_RESET_PASSWORD_SECRET}
      JWT_REFRESH_SECRET: ${API_JWT_REFRESH_SECRET}
      ALLOWED_ORIGINS: ${API_ALLOWED_ORIGINS}
      ALLOWED_SIGN_UP: ${ALLOWED_SIGN_UP}
      S3_ENDPOINT: ${MINIO_ENDPOINT}
      S3_PORT: ${MINIO_PORT}
      S3_BUCKET: ${MINIO_BUCKET}
      S3_ACCESS_TOKEN: ${MINIO_ACCESS_TOKEN}
      S3_SECRET_TOKEN: ${MINIO_SECRET_TOKEN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    networks:
      - net

  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5430:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 20s
      timeout: 20s
      retries: 5
      start_period: 5s
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
      - ../_scripts/db-init.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      - net

  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_TOKEN}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_TOKEN}
    volumes:
      - minio_data:/mnt/data
    command: minio server /mnt/data --address :${MINIO_PORT} --console-address :${MINIO_UI_PORT}
    ports:
      - "9100:9000"
      - "9101:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 10s
      timeout: 5s
      start_period: 5s
    networks:
      - net

  redis:
    image: redis:latest
    restart: unless-stopped
    environment:
      REDIS_USER: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      start_period: 5s
    volumes:
      - redis_data:/data
      - ../_scripts/redis-init.sh:/init/redis-init.sh
    entrypoint: /init/redis-init.sh
    tty: true
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  db_data:
  minio_data:
  redis_data: