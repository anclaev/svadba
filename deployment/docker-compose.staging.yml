services:
  api:
    image: anclaev/svadba-api:${VERSION}
    restart: always
    environment:
      APP_VERSION: ${VERSION}
      HOST: ${API_HOST}
      DATABASE_URL: ${DATABASE_URL}
      COOKIE_SECRET: ${API_COOKIE_SECRET}
      PORT: ${API_PORT}
      GRPC_PORT: ${API_GRPC_PORT}
      SENTRY_DSN: ${API_SENTRY_DSN}
      JWT_ACCESS_SECRET: ${API_JWT_ACCESS_SECRET}
      JWT_CONFIRMATION_SECRET: ${API_JWT_CONFIRMATION_SECRET}
      JWT_RESET_PASSWORD_SECRET: ${API_JWT_RESET_PASSWORD_SECRET}
      JWT_REFRESH_SECRET: ${API_JWT_REFRESH_SECRET}
      ALLOWED_ORIGINS: ${API_ALLOWED_ORIGINS}
      S3_ENDPOINT: ${MINIO_ENDPOINT}
      S3_PORT: ${MINIO_PORT}
      S3_BUCKET: ${MINIO_BUCKET}
      S3_ACCESS_TOKEN: ${MINIO_ACCESS_TOKEN}
      S3_SECRET_TOKEN: ${MINIO_SECRET_TOKEN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${API_PORT}/health"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3 
    networks:
      - dokploy-network
      - svadba-minio-staging-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.svadba-api.rule=Host(`${API_HOST}`)
      - traefik.http.routers.svadba-api.entrypoints=websecure
      - traefik.http.routers.svadba-api.tls=true
      - traefik.http.routers.svadba-api.tls.certresolver=letsencrypt
      - traefik.http.services.svadba-api.loadbalancer.server.port=${API_PORT}
      - traefik.http.routers.svadba-api.service=svadba-api

  bot:
    image: anclaev/svadba-bot:${VERSION}
    restart: always
    depends_on:
      api:
        condition: "service_healthy"
    healthcheck:
      test: ["CMD-SHELL", "netstat -ltn | grep -c ':${BOT_GRPC_PORT}'"]
      interval: 10s
      timeout: 5s
      start_period: 5s
    environment:
      APP_VERSION: ${VERSION}
      WEB_ENDPOINT: ${WEB_URL}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      PORT: ${BOT_PORT}
      GRPC_PORT: ${BOT_GRPC_PORT}
      SENTRY_DSN: ${BOT_SENTRY_DSN}
    networks:
      - dokploy-network

  web:
    image: anclaev/svadba-web:${VERSION}
    restart: always
    depends_on:
      api:
        condition: "service_healthy"  
    environment:
      API_URL: ${API_URL}
      JWT_ACCESS_TIME: ${WEB_JWT_ACCESS_TIME}
      JWT_REFRESH_TIME: ${WEB_JWT_REFRESH_TIME}
      SENTRY_AUTH_TOKEN: ${WEB_SENTRY_AUTH_TOKEN}
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://0.0.0.0:${WEB_PORT}"]
      interval: 10s
      timeout: 5s
      start_period: 5s
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.svadba-web.rule=Host(`${WEB_HOST}`)
      - traefik.http.routers.svadba-web.entrypoints=websecure
      - traefik.http.routers.svadba-web.tls=true
      - traefik.http.routers.svadba-web.tls.certresolver=letsencrypt
      - traefik.http.services.svadba-web.loadbalancer.server.port=${WEB_PORT}
      - traefik.http.routers.svadba-web.service=svadba-web

networks:
  dokploy-network:
    external: true
  svadba-minio-staging-network:
    external: true