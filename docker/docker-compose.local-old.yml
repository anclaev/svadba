services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - postgres_local_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped  

  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    restart: unless-stopped  
    environment:
      - MINIO_ROOT_USER=minio_user
      - MINIO_ROOT_PASSWORD=minio_password
    ports:
      - "9100:9000"
      - "9101:9001"
    volumes:
      - minio_local_data:/mnt/data
    command: minio server /mnt/data --address :9000 --console-address :9001


  redis:
    image: redis:latest
    restart: unless-stopped
    environment:
      - REDIS_USER=redis_user
      - REDIS_PASSWORD=redis_password
      - REDIS_USER_PASSWORD=redis_password
    ports:
      - "6380:6379"
    networks:
      - local
    volumes:
      - redis_local_data:/data
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass redis_password" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user redis_user on >redis_password ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true
  
  redis-ui:
    image: rediscommander/redis-commander
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - REDIS_TLS=false
      - REDIS_PASSWORD=redis_password
      - REDIS_HOST=redis
    networks:
      - local
    ports:
      - "8081:8081"

networks:
  local:
    driver: bridge
volumes:
  postgres_local_data:
    external: true
  minio_local_data:
    external: true
  redis_local_data:
    external: true